<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://shinjaewxxk.github.io/tag/opencv/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://shinjaewxxk.github.io/" rel="alternate" type="text/html" />
  <updated>2022-01-20T16:43:43+09:00</updated>
  <id>https://shinjaewxxk.github.io/tag/opencv/feed.xml</id>

  
  
  

  
    <title type="html">wxxk’s dev_log | </title>
  

  
    <subtitle>코드조각</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리</title>
      <link href="https://shinjaewxxk.github.io/opencv-ch3" rel="alternate" type="text/html" title="OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리" />
      <published>2022-01-20T00:00:00+09:00</published>
      <updated>2022-01-20T00:00:00+09:00</updated>
      <id>https://shinjaewxxk.github.io/opencv-ch3</id>
      <content type="html" xml:base="https://shinjaewxxk.github.io/opencv-ch3">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;python으로 배우는 OpenCV 프로그래밍 &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch1&quot;&gt;OpenCV 프로그래밍 - Chapter 01 서론&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch2&quot;&gt;OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch3&quot;&gt;OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch4&quot;&gt;OpenCV 프로그래밍 - Chapter 04 OpenCV 기본연산&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch5&quot;&gt;OpenCV 프로그래밍 - Chapter 05 임계값과 히스토그램 처리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch6&quot;&gt;OpenCV 프로그래밍 - Chapter 06 영상 공간 필터링&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;이 포스팅은 ‘python으로 배우는 OpenCV 프로그래밍’ 교재를 참고하여 작성하였습니다.&lt;/strong&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>shinjaewxxk</name>
        
        
      </author>

      

      
        <category term="opencv" />
      

      
        <summary type="html">python으로 배우는 OpenCV 프로그래밍 OpenCV 프로그래밍 - Chapter 01 서론 OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력 OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리 OpenCV 프로그래밍 - Chapter 04 OpenCV 기본연산 OpenCV 프로그래밍 - Chapter 05 임계값과 히스토그램 처리 OpenCV 프로그래밍 - Chapter 06 영상 공간 필터링 이 포스팅은 ‘python으로 배우는 OpenCV 프로그래밍’ 교재를 참고하여 작성하였습니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력</title>
      <link href="https://shinjaewxxk.github.io/opencv-ch2" rel="alternate" type="text/html" title="OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력" />
      <published>2022-01-19T00:00:00+09:00</published>
      <updated>2022-01-19T00:00:00+09:00</updated>
      <id>https://shinjaewxxk.github.io/opencv-ch2</id>
      <content type="html" xml:base="https://shinjaewxxk.github.io/opencv-ch2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;python으로 배우는 OpenCV 프로그래밍 &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch1&quot;&gt;OpenCV 프로그래밍 - Chapter 01 서론&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch2&quot;&gt;OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch3&quot;&gt;OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch4&quot;&gt;OpenCV 프로그래밍 - Chapter 04 OpenCV 기본연산&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch5&quot;&gt;OpenCV 프로그래밍 - Chapter 05 임계값과 히스토그램 처리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch6&quot;&gt;OpenCV 프로그래밍 - Chapter 06 영상 공간 필터링&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;이 포스팅은 ‘python으로 배우는 OpenCV 프로그래밍’ 교재를 참고하여 작성하였습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;01-영상-입출력과-디스플레이&quot;&gt;01 영상 입출력과 디스플레이&lt;/h2&gt;

&lt;p&gt;파이썬에서 OpenCV로 영상파일을 읽고, 윈도우 화면에 표시하고, 파일로 저장하는 방법에 대해 알아본다.&lt;/p&gt;

&lt;p&gt;아래 표현에서 []는 생략 가능한 옵션을 나타내고, 화살표는 함수의 반환값을 표현한다.&lt;/p&gt;

&lt;p&gt;반환값이 없을 경우 화살표는 생략한다.&lt;/p&gt;

&lt;h3 id=&quot;영상-입출력과-디스플레이-함수&quot;&gt;영상 입출력과 디스플레이 함수&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;함수&lt;/th&gt;
      &lt;th&gt;비고&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;cv2.imread(filename[,flags]) -&amp;gt; retval&lt;/td&gt;
      &lt;td&gt;영상 입력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cv2.imwrite(filename,img[,params]) -&amp;gt; retval&lt;/td&gt;
      &lt;td&gt;영상파일 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cv2.namedWindow(winname[,flags])&lt;/td&gt;
      &lt;td&gt;윈도우 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cv2.imshow(winname, mat)&lt;/td&gt;
      &lt;td&gt;윈도우 표시&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cv2.waitKey([, delay]) -&amp;gt; retval&lt;/td&gt;
      &lt;td&gt;키보드 입력 대기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cv2.destroyWindow(winname)&lt;/td&gt;
      &lt;td&gt;윈도우 파괴&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cv2.destroyAllWindows()&lt;/td&gt;
      &lt;td&gt;모든 윈도우 파괴&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;각 메서드에 대한 설명
    &lt;ol&gt;
      &lt;li&gt;cv2.imread()는 영상파일을 numpy.ndarray의 배열로 읽어 반환한다.&lt;br /&gt;읽기에 실패하면 None을 반환하며, flags는 &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;cv2.IMREAD_COLOR(디폴트)&lt;/span&gt;, &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;cv2.IMREAD_GRAYSCALE&lt;/span&gt;, &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;cv2.IMREAD_UNCHANGED&lt;/span&gt;등의 읽기 옵션이다.&lt;/li&gt;
      &lt;li&gt;cv2.imwrite()는 numpy.ndarray의 배열 img를 filename의 영상파일로 저장한다.&lt;br /&gt;파일의 확장자에 의해 영상포맷이 결정된다.&lt;br /&gt;params는 압축 관련 인수로 생략할 수 있다.&lt;/li&gt;
      &lt;li&gt;cv2.namedWindow()는 지정한 winname에 해당하는 이름을 갖는 윈도우를 생성한다.&lt;br /&gt;flags는 &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;cv2.WINDOW_AUTOSIZE(디폴트)&lt;/span&gt;, &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;cv2.WINDOW_NORMAL&lt;/span&gt;이 있다.&lt;/li&gt;
      &lt;li&gt;cv2.imshow()는 winname윈도우에 영상 mat를 표시한다.&lt;br /&gt;winname 윈도우가 생성되어 있지 않아도 실행가능하다.&lt;/li&gt;
      &lt;li&gt;cv2.waitKey()는 키보드 입력을 위해 ms단위로 대기한다. 디폴트값은 0이며 디폴트일땐 키보드 입력이 있을 때까지 무한대기한다.&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;cv2.destroyWindow()는 주어진 winname윈도우만 파괴하고, cv2.destroyAllWindows()는 모든 윈도우를 파괴한다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;영상파일-읽기-및-화면-표시&quot;&gt;영상파일 읽기 및 화면 표시&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cv2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./data/lena.jpg'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# cv2.IMREAD_COLOR
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# cv2.IMREAD_GRAYSCALE
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lena color'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lena grayscale'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;destroyAllWindows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 실습코드를 실행 시키면 다음과 같은 결과가 출력되며, 키보드 입력이 있으면 모든 윈도우가 파괴된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/97214209/150270883-a9972694-898d-4502-a032-44c2730e3ef7.png&quot; alt=&quot;image&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;또한 위 코드를 실행하면 다음과 같은 결과가 출력된다.&lt;br /&gt;&lt;br /&gt;
(512, 512, 3)&lt;br /&gt;
(512, 512)&lt;br /&gt;&lt;br /&gt;
이 결과가 의미하는 바는 &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;img  = cv2.imread(imageFile)&lt;/span&gt;는 디폴트로 BGR 3채널의 값으로 출력됨을 알 수 있다 &lt;br /&gt;
그리고 &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;img2 = cv2.imread(imageFile, 0)&lt;/span&gt;는 flags값에 cv2.IMREAD_GRAYSCALE를 의미하는 0값이 입력되어 있으므로 1채널의 값으로 출력됨을 알 수 있다.&lt;br /&gt;
또한 이미지의 픽셀이 512*512라는 것 또한 알 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;영상파일-저장&quot;&gt;영상파일 저장&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cv2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./data/lena.jpg'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# cv2.imread(imageFile, cv2.IMREAD_COLOR)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data/Lena.bmp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data/Lena.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data/Lena2.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IMWRITE_PNG_COMPRESSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data/Lena2.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IMWRITE_JPEG_QUALITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 실습 코드는 영상파일을 저장하는 코드이며 간단한 예제이므로 설명은 생략한다.&lt;/p&gt;

&lt;h3 id=&quot;matplotlib-1--컬러-영상-표시&quot;&gt;matplotlib 1 : 컬러 영상 표시&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cv2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt;   &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./data/lena.jpg'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;imgBGR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# cv2.IMREAD_COLOR
#plt.axis('off')
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imgBGR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imgRGB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cvtColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imgBGR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COLOR_BGR2RGB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imgRGB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;matplotlib은 BGR이 디폴트고, cv2는 RGB가 디폴트이므로 plt.show()를 사용해 결과를 출력할때에는 &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;cv2.cvtColor()&lt;/span&gt;를 사용해서 BGR을 RGB로 변환해줘야 한다.&lt;br /&gt;
변환하지 않고 그대로 출력할 경우 다음과 같고&lt;br /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/97214209/150283462-9f20535a-faa6-4dd3-9e78-c62f5691e5ef.png&quot; alt=&quot;image&quot; /&gt;
변환하고 출력할 경우 다음과 같다.
&lt;img src=&quot;https://user-images.githubusercontent.com/97214209/150283217-7c7386d1-f143-4956-9765-9d2e8f407b48.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 출력결과의 하단에 표시된 값을 비교하면 이해하기 쉽다.
즉 채널을 표현하는 순서가 다를 뿐 RGB로 처리하는 것은 동일하다.&lt;br /&gt;
&lt;span style=&quot;background-color: #F7DDBE&quot;&gt;plt는 BGR순서로 RGB를 표현, cv2는 RGB순서로 RGB를 표현&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;matplotlib-2--그레이스케일-영상-표시&quot;&gt;matplotlib 2 : 그레이스케일 영상 표시&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cv2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt;   &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./data/lena.jpg'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;imgGray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IMREAD_GRAYSCALE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#plt.axis('off')
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imgGray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;gray&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interpolation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bicubic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;background-color: #F7DDBE&quot;&gt;plt.imshow(imgGray, cmap = “gray”, interpolation=’bicubic’)&lt;/span&gt;는 imgGray영상을 ‘gray’컬러맵(cmap), ‘bicubic’으로 보간한다.&lt;br /&gt;
따라서 다음과 같은 결과가 출력되며 3개의 채널을 가지던 RGB와 달리 1개의 채널만 가지고 있음을 알 수 있다.
&lt;img src=&quot;https://user-images.githubusercontent.com/97214209/150288275-ca8404cd-76cf-440a-99f6-f0ce068ccf22.png&quot; alt=&quot;image&quot; /&gt;
만약 &lt;span style=&quot;background-color: #F7DDBE&quot;&gt;plt.imshow(imgGray)&lt;/span&gt;로 결과를 출력한다면 다음과 같은 결과가 출력된다.
&lt;img src=&quot;https://user-images.githubusercontent.com/97214209/150288748-9b000f6e-328b-4772-a0a2-5efc32e92d14.png&quot; alt=&quot;image&quot; /&gt;
&lt;span style=&quot;background-color: #F7DDBE&quot;&gt;실행 시켜본 결과 0이 검정색 255가 흰색을 의미하는 것을 알 수 있었다.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;위에서 plt로 결과 출력한 윈도우에는 여백이 존재한다.&lt;br /&gt;
다음 코드는 이 여백을 조정하는 코드이다.&lt;/p&gt;

&lt;h3 id=&quot;matplotlib3--여백-조정-및-영상-저장&quot;&gt;matplotlib3 : 여백 조정 및 영상 저장&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cv2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt;   &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./data/lena.jpg'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;imgGray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IMREAD_GRAYSCALE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots_adjust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imgGray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'gray'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;##plt.axis('tight')
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'off'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data/0205.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>shinjaewxxk</name>
        
        
      </author>

      

      
        <category term="opencv" />
      

      
        <summary type="html">python으로 배우는 OpenCV 프로그래밍 OpenCV 프로그래밍 - Chapter 01 서론 OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력 OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리 OpenCV 프로그래밍 - Chapter 04 OpenCV 기본연산 OpenCV 프로그래밍 - Chapter 05 임계값과 히스토그램 처리 OpenCV 프로그래밍 - Chapter 06 영상 공간 필터링 이 포스팅은 ‘python으로 배우는 OpenCV 프로그래밍’ 교재를 참고하여 작성하였습니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">OpenCV 프로그래밍 - Chapter 01 서론</title>
      <link href="https://shinjaewxxk.github.io/opencv-ch1" rel="alternate" type="text/html" title="OpenCV 프로그래밍 - Chapter 01 서론" />
      <published>2022-01-18T00:00:00+09:00</published>
      <updated>2022-01-18T00:00:00+09:00</updated>
      <id>https://shinjaewxxk.github.io/opencv-ch1</id>
      <content type="html" xml:base="https://shinjaewxxk.github.io/opencv-ch1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;python으로 배우는 OpenCV 프로그래밍 &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch1&quot;&gt;OpenCV 프로그래밍 - Chapter 01 서론&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch2&quot;&gt;OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch3&quot;&gt;OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch4&quot;&gt;OpenCV 프로그래밍 - Chapter 04 OpenCV 기본연산&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch5&quot;&gt;OpenCV 프로그래밍 - Chapter 05 임계값과 히스토그램 처리&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./opencv-ch6&quot;&gt;OpenCV 프로그래밍 - Chapter 06 영상 공간 필터링&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;이 포스팅은 ‘python으로 배우는 OpenCV 프로그래밍’ 교재를 참고하여 작성하였습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;01-영상처리와-컴퓨터-비전&quot;&gt;01 영상처리와 컴퓨터 비전&lt;/h2&gt;

&lt;p&gt;디지털 영상처리는 컴퓨터를 사용하여 입력 영상 데이터를 처리하는 분야이다.&lt;/p&gt;

&lt;p&gt;컴퓨터 비전은 카메라에 의해 캡쳐된 입력 영상에서 의미 있는 정보를 추출하는 분야로 주로 실시간(real time)응용 문제를 다룬다.&lt;/p&gt;

&lt;h3 id=&quot;디지털-영상처리의-응용-예시&quot;&gt;디지털 영상처리의 응용 예시&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;입력 영상에 포함된 잡음(noise)을 제거한다.&lt;/li&gt;
  &lt;li&gt;영상의 대비를 개선한다.&lt;/li&gt;
  &lt;li&gt;영상의 특정 부분인 관심 영역(region of interest)을 강조한다.&lt;/li&gt;
  &lt;li&gt;관심 영역을 분할(segmentation)한다.&lt;/li&gt;
  &lt;li&gt;영상을 파일로 압축한다.&lt;/li&gt;
  &lt;li&gt;영상을 네트워크를 통해 전송한다.&lt;/li&gt;
  &lt;li&gt;그 외 영상 검색, 분류, 인식 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;컴퓨터-비전의-응용-예시&quot;&gt;컴퓨터 비전의 응용 예시&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;산업현장에서 자동으로 제품의 결함을 검사한다.&lt;/li&gt;
  &lt;li&gt;스캐너 또는 카메라 캡쳐 영상에서 문자 인식, 얼굴 인식, 지문 인식을 한다.&lt;/li&gt;
  &lt;li&gt;사람 또는 자동차 등과 같은 움직이는 물체를 검출(motion detection) 및 물체 추적(object tracking)을 한다.&lt;/li&gt;
  &lt;li&gt;2개 이상의 카메라로부터 캡쳐한 스테레오 영상을 이용하여 깊이를 계산하거나 3차원 물체의 구조를 계산한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;영상처리와 컴퓨터 비전은 모두 영상을 다루기 때문에 경계 구분이 모호하다.&lt;/p&gt;

&lt;p&gt;교재에서는 이를 구분하지만, 필자는 영상처리와 컴퓨터 비전은 같은 맥락이라고 생각하므로 따로 구분하진 않겠다.&lt;/p&gt;

&lt;h2 id=&quot;02-opencv-개요&quot;&gt;02 OpenCV 개요&lt;/h2&gt;

&lt;p&gt;OpenCV(Open Source Computer Vision)는 영상처리, 컴퓨터 비전, 비디오처리, 기계학습 등을 포함한 라이브러리이다.&lt;/p&gt;

&lt;p&gt;OpenCV는 교육 및 상업 목적 사용이 모두 무료이다.&lt;/p&gt;

&lt;p&gt;OpenCV는 윈도우, 리눅스, 안드로이드, 맥 등의 다양한 플랫폼에서 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;주로 Python을 사용하고 이 교재도 마찬가지로 Python을 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;03-파이썬-numpy-matplotlib-opencv-설치&quot;&gt;03 파이썬, Numpy, Matplotlib, OpenCV 설치&lt;/h2&gt;

&lt;p&gt;필자는 모든 설치를 마친 상태이며, 파이썬과 각 모듈설치 방법은 검색하면 자세히 나오므로 검색해보길 바란다.&lt;/p&gt;

&lt;p&gt;필자가 사용하는 파이썬과 모듈의 버전은 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;110%&quot; alt=&quot;스크린샷 2022-01-19 오후 9 58 54&quot; src=&quot;https://user-images.githubusercontent.com/97214209/150135487-1fa876ac-4b11-4851-8fd2-0177d94d4cc5.png&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>shinjaewxxk</name>
        
        
      </author>

      

      
        <category term="opencv" />
      

      
        <summary type="html">python으로 배우는 OpenCV 프로그래밍 OpenCV 프로그래밍 - Chapter 01 서론 OpenCV 프로그래밍 - Chapter 02 영상 및 비디오 입출력 OpenCV 프로그래밍 - Chapter 03 간단한 그래픽 및 이벤트 처리 OpenCV 프로그래밍 - Chapter 04 OpenCV 기본연산 OpenCV 프로그래밍 - Chapter 05 임계값과 히스토그램 처리 OpenCV 프로그래밍 - Chapter 06 영상 공간 필터링 이 포스팅은 ‘python으로 배우는 OpenCV 프로그래밍’ 교재를 참고하여 작성하였습니다.</summary>
      

      
      
    </entry>
  
</feed>
